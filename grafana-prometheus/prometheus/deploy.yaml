apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: gf-space
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  - ingresses
  - configmaps
  verbs: ["get", "list", "watch"]
- apiGroups:
    - "extensions"
    - "networking.k8s.io"
  resources:
    - ingresses/status
    - ingresses
  verbs:
    - get
    - list
    - watch
- apiGroups:
    - "discovery.k8s.io"
  resources:
    - endpointslices
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
  namespace: gf-space
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: gf-space
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: gf-space
  name: prometheus-configmap
data:
  prometheus.yml: |
    global:
      scrape_interval:     15s # By default, scrape targets every 15 seconds.
      evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
      # Attach these labels to any time series or alerts when communicating with
      # external systems (federation, remote storage, Alertmanager).
    #external_labels:
    #  monitor: 'codelab-monitor'
      
    # A scrape configuration containing exactly one endpoint to scrape:
    # Here it's Prometheus itself.
    scrape_configs:
      # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
      - job_name: 'prometheus'
      
      # Override the global default and scrape targets from this job every 5 seconds.
        scrape_interval: 5s
      
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'kube-state-metrics'
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_container_name]
            regex: kube-state-metrics
            action: keep

      - job_name: kubernetes-apiservers
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - action: keep
          regex: default;kubernetes;https
          source_labels:
          - __meta_kubernetes_namespace
          - __meta_kubernetes_service_name
          - __meta_kubernetes_endpoint_port_name

      - job_name: kubernetes-nodes
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/$1/proxy/metrics
        - action: replace
          source_labels:
          - __meta_kubernetes_node_address_Hostname
          target_label: node

      - job_name: 'kubernetes-nodes-cadvisor'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
        - action: replace
          source_labels:
          - __meta_kubernetes_node_address_Hostname
          target_label: node

      - job_name: kubernetes-service-endpoints
        honor_labels: true
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_scrape
        - action: drop
          regex: true
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow
        - action: replace
          regex: (https?)
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_scheme
          target_label: __scheme__
        - action: replace
          regex: (.+)
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_path
          target_label: __metrics_path__
        - action: replace
          regex: (.+?)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels:
          - __address__
          - __meta_kubernetes_service_annotation_prometheus_io_port
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
          replacement: __param_$1
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_service_name
          target_label: service
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: node

      - job_name: kubernetes-service-endpoints-slow
        honor_labels: true
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow
        - action: replace
          regex: (https?)
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_scheme
          target_label: __scheme__
        - action: replace
          regex: (.+)
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_path
          target_label: __metrics_path__
        - action: replace
          regex: (.+?)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels:
          - __address__
          - __meta_kubernetes_service_annotation_prometheus_io_port
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
          replacement: __param_$1
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_service_name
          target_label: service
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: node
        scrape_interval: 5m
        scrape_timeout: 30s
      - honor_labels: true
        job_name: prometheus-pushgateway
        kubernetes_sd_configs:
        - role: service
        relabel_configs:
        - action: keep
          regex: pushgateway
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_probe

      - job_name: kubernetes-services
        honor_labels: true
        kubernetes_sd_configs:
        - role: service
        metrics_path: /probe
        params:
          module:
          - http_2xx
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_probe
        - source_labels:
          - __address__
          target_label: __param_target
        - replacement: blackbox
          target_label: __address__
        - source_labels:
          - __param_target
          target_label: instance
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - source_labels:
          - __meta_kubernetes_service_name
          target_label: service

      - job_name: 'kubernetes-pods'
        honor_labels: true
        #tls_config:
        #  ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        #  insecure_skip_verify: true
        #bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: drop
            regex: Pending|Succeeded|Failed|Completed
            source_labels:
            - __meta_kubernetes_pod_phase
          - action: keep
            regex: true
            source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_scrape
          - action: drop
            regex: true
            source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
          - action: replace
            regex: (https?)
            source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_scheme
            target_label: __scheme__
          - action: replace
            regex: (\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})
            replacement: '[$2]:$1'
            source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_port
            - __meta_kubernetes_pod_ip
            target_label: __address__
          - action: replace
            regex: (\d+);((([0-9]+?)(\.|$)){4})
            replacement: $2:$1
            source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_port
            - __meta_kubernetes_pod_ip
            target_label: __address__
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          #- source_labels: [__meta_kubernetes_pod_container_name]
          #  regex: cadvisor|node-exporter|dockeri2cmoni|speaker|loki|promtail|otel-agent|otel-collector|istio-proxy|kiali
          #  action: keep
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: node_name
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod
          
      - job_name: kubernetes-pods-slow
        honor_labels: true
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
        - action: replace
          regex: (https?)
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_scheme
          target_label: __scheme__
        - action: replace
          regex: (.+)
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_path
          target_label: __metrics_path__
        - action: replace
          regex: (\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})
          replacement: '[$2]:$1'
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_port
          - __meta_kubernetes_pod_ip
          target_label: __address__
        - action: replace
          regex: (\d+);((([0-9]+?)(\.|$)){4})
          replacement: $2:$1
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_port
          - __meta_kubernetes_pod_ip
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
          replacement: __param_$1
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: pod
        - action: drop
          regex: Pending|Succeeded|Failed|Completed
          source_labels:
          - __meta_kubernetes_pod_phase
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: node
        scrape_interval: 5m
        scrape_timeout: 30s

    remote_write:
      - url: http://victoriametrics-service:8428/api/v1/write
      
    #remote_read:
    # - url: "http://192.168.0.6:8086/api/v1/prom/read?db=testdata"
    #  - url: "http://192.168.0.6:8086/api/v1/prom/read?db=test&u=karosu&p=windam1314"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: gf-space
spec:
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        podinfo: "Prometheus"
    spec:
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/hostname
      #             operator: In
      #             values:
      #               - "k8s-worker-2"
      serviceAccountName: prometheus
      serviceAccount: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:v3.2.1
          #image: prom/prometheus:v2.48.1
          imagePullPolicy: IfNotPresent
          #/bin/prometheus
          #-config.file=/etc/prometheus/prometheus.yml
          #-storage.tsdb.path=/prometheus
          #-web.console.libraries=/usr/share/prometheus/console_libraries
          #-web.console.templates=/usr/share/prometheus/consoles
          command:
            - /bin/prometheus
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.console.libraries=/usr/share/prometheus/console_libraries"
            - "--web.console.templates=/usr/share/prometheus/consoles"
            - "--storage.tsdb.retention.time=4d"  #保存期間
            - "--storage.tsdb.min-block-duration=1h"  #ブロック書き出しタイミング時間
            - "--storage.tsdb.max-block-duration=12h" #
          # args: [
          #   "--config.file=/etc/prometheus/prometheus.yml",
          #   "--storage.tsdb.path=/prometheus",
          #   # "",
          #   # "",
          #   "--web"
          #   ]

          ports:
            - containerPort: 9090
          resources:
            limits:
              cpu: 400m
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 1Gi
          volumeMounts:
            - name: config-vol
              mountPath: /etc/prometheus/prometheus.yml
              # mountPath: /prometheus/prometheus.yml
              subPath: prometheus.yml
            - name: prometheus-vol
              mountPath: /prometheus
      volumes:
        - name: config-vol
          configMap:
            name: prometheus-configmap
            items:
              - key: prometheus.yml
                path: prometheus.yml
        - name: prometheus-vol
          # persistentVolumeClaim:
          #   claimName: prometheus-pv-claim
          emptyDir:
            {}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: gf-space
spec:
  selector:
    app: prometheus
  ports:
    - port: 9090
      targetPort: 9090
  # type: LoadBalancer
  type: ClusterIP
---
