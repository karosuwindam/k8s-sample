apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: haproxy
  namespace: haproxy
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: haproxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: haproxy
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8405'
        prometheus.io/path: /metrics

    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - arm
                    - arm64
                - key: node-role.kubernetes.io/control-plane
                  operator: In
                  values: 
                    - ""
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      - effect: NoSchedule
        operator: Exists
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      securityContext:
        runAsUser: 0
      containers:
      - name: haproxy
        image: haproxy:2.8.5
        ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 433
            protocol: TCP
          - containerPort: 8405
            protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 180Mi
          requests:
            cpu: 102m
            memory: 180Mi
        volumeMounts:
        - name: config-vol
          mountPath: /usr/local/etc/haproxy/haproxy.cfg
          subPath: haproxy.cfg
          readOnly: true
      volumes:
        - name: config-vol
          configMap:
            name: haproxy-cm
            items:
            - key: haproxy.cfg
              path: haproxy.cfg

